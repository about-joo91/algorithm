import sys
input = sys.stdin.readline

dp = [0] * 31
dp[2] = 3

N = int(input())

for i in range(4, N+1):
    if i % 2 != 0:
        dp[i] = 0
    else:
        dp[i] = dp[i-2] * 3 + sum(dp[:i-2]) * 2 + 2

print(dp[N])

# 홀수는 채울 수가 없다.
# 짝수는 
# 3 * 2를 채울 수 있는 경우의수 3에 반복되므로 이전 짝수의 타일일 때 경우의수 * 3 으로 이어진다.
# 그리고 3 * 4, 3 * 6, 3 * 8을 채울 수 있는 (위의 경우를 제외한) 경우의 수 2가 계속해서 생겨난다.
# 마지막으로 현재 짝수개를 이루는 2가지 경우의 수
# ex) dp[4] = 3 * 3 + 2 * 0 + 2
# ex2) dp[6] = 11 * 3 + 2 * 3 + 2
# ex3) dp[8] = 41 * 3 + 2 * (3 + 11) + 2